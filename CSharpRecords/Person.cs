using System.Text;

namespace CSharpRecords;

// Simpliest form of records. It creates a class called Person with a constructor that takes to arguments, fullname and DOB.
// The person class has 2 immutable properties, firstname and lastname inherits from IEquatable.
public record PersonAsRecord(string Fullname, DateOnly DateOfBirth)
{
    // Override PrintMembers method that is generated by record.
    // You can override other methods as wel if needed
    protected virtual bool PrintMembers(StringBuilder stringBuilder)
    {
        stringBuilder.Append($"Fullname is: {Fullname} ");
        stringBuilder.Append($"Date of birth is: {DateOfBirth} ");

        return true;
    }
};

// Generates a struct
//public record struct PersonAsRecord(string Fullname, DateOnly DateOfBirth);

// More expllicit way of creating a record
// Note that creating a record this way does not generate a Deconstruct method
//public record PersonAsRecord
//{
//    public string Fullname { get; init; } = default!;
//    public DateOnly DateOfBirth { get; init; } = default!;
//}

public class PersonAsClass
{
    public string Fullname { get; init; } = default!;
    public DateOnly DateOfBirth { get; init; } = default!;
}
